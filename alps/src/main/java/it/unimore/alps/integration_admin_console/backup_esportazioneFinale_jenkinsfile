@Library('re-search-alps-library')_
pipeline {
    agent any
    parameters{
        string(name: 'project_jar', defaultValue: '/home/matteop/script/alps-0.0.1-SNAPSHOT.jar', description: 'File java da usare nel progetto')
        string(name: 'db', defaultValue: 'alpsv13', description: 'Nome da utilizzare nella creazione del database')
        string(name: 'path_csv_export', defaultValue: '/home/matteop/script/csv_data_23_10_2018/', description: 'Nome assoluto usato nell\' esportazione per la deduplicazione')
        string(name: 'log_dir', defaultValue: '/home/matteop/log/', description: 'Nome assoluto dove vengono conservati i log delle esecuzioni')
        string(name: 'dedup_db', defaultValue: 'alpsv13Dedup', description: 'Nome database deduplicazione')
    }
    environment{
        lastState = readFile('../log.txt').trim()
    }
    stages {
        stage('Esportazione_Finale'){
            steps{
                script{
                    if("${lastState}" == "nuts_integration successful"){
                        echo "Inizio fase di esportazione finale"
                    } else {
                        if("${lastState}" == "deduplication successful"){
                            input(message: "Attenzione, sicuro di volere eseguire l'esportazione finale dopo la deduplicazione?", ok: "Va bene")
                            echo "Eseguiamo comunque"
                        } else {
                            error 'not after nuts integration'
                        }
                    }
                    json_export("${project_jar}", "${db}", "${log_dir}", "${dedup_db}")
                }
            }
            post {
                success {
                    echo "Fase di esportazione finale completata con successo"
                    sh "echo 'json export successful' > ../log.txt"
                }
                failure{
                    echo "Fase esportazione finale fallita"
                }
            }
        }
    }
}
