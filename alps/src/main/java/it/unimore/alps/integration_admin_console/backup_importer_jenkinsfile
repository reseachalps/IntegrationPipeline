@Library('re-search-alps-library')_
pipeline {
    agent any
    parameters{
        string(name: 'project_jar', defaultValue: '/home/matteop/script/alps-0.0.1-SNAPSHOT.jar', description: 'File java da usare nel progetto')
        string(name: 'data_path', defaultValue: '/home/matteop/new_data/', description: 'Path utilizzato in fase di importazione')
        string(name: 'db', defaultValue: 'alpsv13', description: 'Nome da utilizzare nella creazione del database')
        string(name: 'path_csv_export', defaultValue: '/home/matteop/script/csv_data_23_10_2018/', description: 'Nome assoluto usato nell\' esportazione per la deduplicazione')
        string(name: 'log_dir', defaultValue: '/home/matteop/log/', description: 'Nome assoluto dove vengono conservati i log delle esecuzioni')
        string(name: 'dedup_db', defaultValue: 'alpsv13Dedup', description: 'Nome database deduplicazione')
        choice(name: 'source', choices: ['0 ORCID', '1 SCANR', '2 ARIANNA', '3 BVD', '4 CERCAUNIVERSITA', '5 CNR', '6 PATIRIS', '7 QUESTIO', '8 REGISTRO IMPRESE', '9 P3', '10 GRID', '11 FWF', '12 SICRIS', '13 ARAMIS', '14 FOEN', '15 OPENAIRE', '16 GENERIC IMPORTER'], description: 'Scegli fonte da utilizzare')
    }
    stages {
        stage('Importazione'){
            steps{
                echo "Inizio fase di importazione per ${source}"
                importer("${project_jar}", "${data_path}", "${db}", "${log_dir}", "${source[0]}${source[1]}")
            }
            post {
                success {
                    echo "Fase importazione completata con successo"
                    sh "echo 'import successful' > ../log.txt"
                    script{
                        prosegui = input(message: "Vuoi eseguire la fase di integrazione", ok: "Conferma", parameters: [choice(name: 'prosegui', choices: ['si', 'no'], description: 'Eseguire integrazione')])
                        if("${prosegui}" == "si")
                            build job: 'Re-search_Alps_Integrazione', parameters: [[$class: 'StringParameterValue', name: 'project_jar', value: project_jar], [$class: 'StringParameterValue', name: 'db', value: db], [$class: 'StringParameterValue', name: 'path_csv_export', value: path_csv_export], [$class: 'StringParameterValue', name: 'log_dir', value: log_dir], [$class: 'StringParameterValue', name: 'dedup_db', value: dedup_db]]
                    }
                }
                failure{
                    echo "Fase importazione fallita"
                    sh "echo 'import failed' > ../log.txt"
                }
            }
        }
    }
}
